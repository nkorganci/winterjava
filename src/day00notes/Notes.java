package day00notes;

public class Notes {

    /*
    I HAVE TO STUDY

    1-Boolean && || ?? differences
     */


    /*
    1-  Local variables can only be declared as final and not private
    2- Both the instance variable and the method have the name same as the class. This is allowed but is a bad practice
    2- "outer" and "inner" are valid label names can be used by continue and break
    3- Lambda expression's parameter a cannot redeclare another local variable defined in an enclosing scope.

    INTERFACE
    1- Interface variables are public, static and final. Their value cannot be changed/incremented


    ARRAY
    1-  String [] a = new String[3];
        Variable 'a' contains the memory address of String array object.
        Since 'a' is of reference type, it prints a String Containing @ symbol.

    2-  *double [] arr = new int[3];
        *int [] object cannot be assigned to double [] type.
        In Java, objects are manipulated through reference variables, and there is no operator
        for copying an objectâ€”the assignment operator duplicates the reference, not the object.
        The clone() method provides this missing functionality.

        LOOPS
        1- There should be curly bracket after while loop. Otherwise only 1st statement will work, infinite loop.


        VAR
        1-//You can use var only for local variables (in methods). It cannot be used for instance variables (at class level).
        //You cannot use var in Lambda expressions.
        //You cannot use var for method signatures (in return types and parameters).

     */

    /*
            STRING
        1- If you assign a char to string gives error, if you dont no problem.
        2- If you use charAt(), you can not use any more String methods, like concat().
     */
}
